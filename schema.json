{
    "$id": "esp.json/gameDefinitionFile.schema.json",
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Game Definition File",
    "additionalProperties": false,
    "properties": {
        "game": {
            "type": "string",
            "description": "An identifier for the game the definitions are associated with."
        },
        "build": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Build identifier.  Build author followed by hexadecimal unix second."
                },
                "flags": {
                    "type": "array",
                    "description": "Build flags used.",
                    "items": {
                        "type": "string"
                    }
                },
                "xedit": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "commit": {
                            "type": "string",
                            "description": "The xEdit commit sha used to convert definitions."
                        },
                        "repo": {
                            "type": "string",
                            "description": "The name of the repository xEdit definitions were sourced from."
                        },
                        "tag": {
                            "type": "string",
                            "description": "The tag associated with the xEdit commit, if present."
                        }
                    }
                }
            }
        },
        "defs": {
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "\\w+": {
                    "$ref": "#/definitions/definitionEntry"
                }
            }
        }
    },
    "definitions": {
        "definitionEntry": {
            "title": "Definition Entry",
            "oneOf": [
                {
                    "$ref": "#/definitions/group"
                },
                {
                    "$ref": "#/definitions/record"
                },
                {
                    "$ref": "#/definitions/format"
                },
                {
                    "$ref": "#/definitions/memberOrField"
                },
                {
                    "$ref": "#/definitions/ctdaFunctions"
                },
                {
                    "$ref": "#/definitions/pluginFile"
                }
            ]
        },
        "group": {
            "description": "A representation of an esp.json group definition.",
            "additionalProperties": false,
            "required": [
                "type",
                "groupType",
                "children"
            ],
            "properties": {
                "type": {
                    "const": "group"
                },
                "groupType": {
                    "type": "integer"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "$ref": "#/definitions/group"
                            },
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/id"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "id": {
            "description": "A reference to another esp.json definition.",
            "type": "string"
        },
        "record": {
            "description": "A representation of an esp.json record definition.",
            "additionalProperties": false,
            "properties": {
                "containedInElement": {
                    "$ref": "#/definitions/containedInElement"
                }
            },
            "oneOf": [
                {
                    "type": "object",
                    "required": [
                        "signature",
                        "type",
                        "name",
                        "id"
                    ],
                    "properties": {
                        "signature": {
                            "$ref": "#/definitions/signature"
                        },
                        "type": {
                            "const": "record"
                        },
                        "name": {
                            "type": "string"
                        },
                        "id": {
                            "$ref": "#/definitions/id"
                        }
                    }
                },
                {
                    "type": "object",
                    "required": [
                        "signature",
                        "type",
                        "name",
                        "members"
                    ],
                    "properties": {
                        "signature": {
                            "$ref": "#/definitions/signature"
                        },
                        "type": {
                            "const": "record"
                        },
                        "name": {
                            "type": "string"
                        },
                        "flags": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/flags"
                                },
                                {
                                    "$ref": "#/definitions/formatUnion"
                                }
                            ]
                        },
                        "members": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/member"
                            }
                        }
                    }
                },
                {
                    "title": "Partial Record Definition",
                    "description": "This is a record definition that is used as a base for other record definitions.  It does not actually define a specific record to parse - hence the signature and name properties being ommitted.",
                    "type": "object",
                    "required": [
                        "type",
                        "members"
                    ],
                    "properties": {
                        "type": {
                            "const": "record"
                        },
                        "flags": {
                            "oneOf": [
                                {
                                    "$ref": "#/definitions/flags"
                                },
                                {
                                    "$ref": "#/definitions/formatUnion"
                                }
                            ]
                        },
                        "members": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/member"
                            }
                        }
                    }
                }
            ]
        },
        "containedInElement": {
            "title": "Contained In Element",
            "description": "Describes what records this record can be contained in.",
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/name"
                },
                "type": {
                    "const": "formId"
                },
                "required": {
                    "const": true
                },
                "signatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/signature"
                    }
                }
            }
        },
        "name": {
            "title": "Name",
            "type": "string",
            "description": "A name assigned to a data field.",
            "default": "Unknown"
        },
        "signature": {
            "description": "A Bethesda record or subrecord signature.",
            "type": "string"
        },
        "flags": {
            "description": "A representation of an esp.json flags definition.",
            "type": "object",
            "required": [
                "type",
                "flags"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "flags"
                },
                "flags": {
                    "type": "object",
                    "description": "Associates positive integer keys to flag labels.",
                    "patternProperties": {
                        "^(0|[1-9][0-9]*)$": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "showUnknown": {
                    "type": "boolean",
                    "description": "If set to true, unlabeled flags will be assigned labels in the format `Unknown ${Flag Ordinal + 1}`.  E.g. if no flags were labeled, and the data size was 4 bytes, you would have labels Unknown 1 through Unknown 32."
                }
            }
        },
        "formatUnion": {
            "title": "Format Union",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "const": "formatUnion"
                },
                "decider": {
                    "$ref": "#/definitions/callback",
                    "description": "Invoked to determine which format to use."
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flags"
                    }
                }
            }
        },
        "callback": {
            "title": "Callback",
            "type": "string",
            "description": "A string which identifies a callback to invoke."
        },
        "member": {
            "title": "Member",
            "description": "A representation of an esp.json member.  Members are subrecords or structures which contain one or more subrecords.",
            "oneOf": [
                {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/id"
                        },
                        "required": {
                            "$ref": "#/definitions/required"
                        },
                        "name": {
                            "$ref": "#/definitions/name"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/memberStruct"
                },
                {
                    "$ref": "#/definitions/memberArray"
                },
                {
                    "$ref": "#/definitions/memberUnion"
                },
                {
                    "$ref": "#/definitions/subrecord"
                }
            ]
        },
        "required": {
            "description": "If set to true, the entity should be created when creating a new instance of its parent object, and removing the entity should not be allowed.",
            "type": "boolean"
        },
        "memberStruct": {
            "title": "Member Struct",
            "type": "object",
            "required": [
                "type",
                "members"
            ],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "$ref": "#/definitions/name"
                },
                "type": {
                    "const": "memberStruct"
                },
                "unordered": {
                    "type": "boolean",
                    "description": "Indicates whether or not the struct can be initialized when finding a member subrecord other than the first member subrecord."
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/member"
                    }
                },
                "sortKey": {
                    "$ref": "#/definitions/sortKey"
                },
                "conflictType": {
                    "$ref": "#/definitions/conflictType"
                },
                "required": {
                    "$ref": "#/definitions/required"
                },
                "defFlags": {
                    "$ref": "#/definitions/defFlags"
                }
            }
        },
        "sortKey": {
            "title": "Sort Key",
            "description": "An array of indices corresponding to the elements to combine to create a sort key.",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "integer",
                "minimum": 0
            }
        },
        "conflictType": {
            "title": "Conflict Type",
            "description": "A string which identifies the conflict type to use when computing conflicts.",
            "enum": [
                "Ignore",
                "BenignIfAdded",
                "Benign",
                "Override",
                "Translate",
                "NormalIgnoreEmpty",
                "Critical",
                "FormID"
            ]
        },
        "defFlags": {
            "title": "Definition flags",
            "description": "Flags that indicate how certain implementation-specific behaviors should operate.",
            "type": "array",
            "items": {
                "enum": [
                    "notAlignable",
                    "zeroSortKey",
                    "protected",
                    "collapsed",
                    "noReport",
                    "translatable",
                    "allowAnyMember"
                ]
            },
            "uniqueItems": true
        },
        "memberArray": {
            "title": "Member Array",
            "type": "object",
            "required": [
                "type",
                "member"
            ],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "$ref": "#/definitions/name"
                },
                "type": {
                    "const": "memberArray"
                },
                "counter": {
                    "$ref": "#/definitions/counter"
                },
                "sorted": {
                    "$ref": "#/definitions/sorted"
                },
                "size": {
                    "$ref": "#/definitions/size"
                },
                "prefix": {
                    "$ref": "#/definitions/prefix"
                },
                "member": {
                    "$ref": "#/definitions/member"
                },
                "conflictType": {
                    "$ref": "#/definitions/conflictType"
                },
                "required": {
                    "$ref": "#/definitions/required"
                },
                "defFlags": {
                    "$ref": "#/definitions/defFlags"
                },
                "afterSet": {
                    "$ref": "#/definitions/callback"
                }
            }
        },
        "counter": {
            "title": "Counter",
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of counter to use.  The base counter behavior uses the type `elementCounter`."
                },
                "path": {
                    "type": "string",
                    "description": "The path of the sibling counter element to use with an `elementCounter`."
                }
            }
        },
        "sorted": {
            "title": "Sorted",
            "description": "If set to true, entries in the array should be sorted based on sort keys.",
            "type": "boolean"
        },
        "size": {
            "title": "Size",
            "description": "The fixed size of the data.",
            "type": "integer",
            "minimum": 0
        },
        "prefix": {
            "title": "Prefix",
            "description": "The number of prefix bytes used to indicate the size of the data.",
            "oneOf": [
                {
                    "const": 1
                },
                {
                    "const": 2
                },
                {
                    "const": 4
                }
            ]
        },
        "memberUnion": {
            "title": "Member Union",
            "type": "object",
            "required": [
                "type",
                "members"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "memberUnion"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/member"
                    }
                },
                "conflictType": {
                    "$ref": "#/definitions/conflictType"
                },
                "required": {
                    "$ref": "#/definitions/required"
                },
                "defFlags": {
                    "$ref": "#/definitions/defFlags"
                }
            }
        },
        "subrecord": {
            "title": "Subrecord",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "signature"
            ],
            "properties": {
                "signature": {
                    "$ref": "#/definitions/signature"
                },
                "conflictType": {
                    "$ref": "#/definitions/conflictType"
                },
                "required": {
                    "$ref": "#/definitions/required"
                },
                "defFlags": {
                    "$ref": "#/definitions/defFlags"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/struct"
                },
                {
                    "$ref": "#/definitions/array"
                },
                {
                    "$ref": "#/definitions/union"
                },
                {
                    "$ref": "#/definitions/formId"
                },
                {
                    "$ref": "#/definitions/float"
                },
                {
                    "$ref": "#/definitions/integer"
                },
                {
                    "$ref": "#/definitions/string"
                },
                {
                    "$ref": "#/definitions/mgefCode"
                },
                {
                    "$ref": "#/definitions/bytes"
                },
                {
                    "$ref": "#/definitions/empty"
                },
                {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/id"
                        },
                        "name": {
                            "$ref": "#/definitions/name"
                        }
                    }
                }
            ]
        },
        "struct": {
            "title": "Struct",
            "type": "object",
            "required": [
                "type",
                "elements"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "struct"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/field"
                    }
                },
                "sortKey": {
                    "$ref": "#/definitions/sortKey"
                },
                "elementMap": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "afterSet": {
                    "$ref": "#/definitions/callback"
                }
            }
        },
        "field": {
            "title": "Data",
            "additionalProperties": false,
            "properties": {
                "conflictType": {
                    "$ref": "#/definitions/conflictType"
                },
                "required": {
                    "$ref": "#/definitions/required"
                },
                "defFlags": {
                    "$ref": "#/definitions/defFlags"
                }
            },
            "oneOf": [
                {
                    "$ref": "#/definitions/struct"
                },
                {
                    "$ref": "#/definitions/array"
                },
                {
                    "$ref": "#/definitions/union"
                },
                {
                    "$ref": "#/definitions/recursive"
                },
                {
                    "$ref": "#/definitions/formId"
                },
                {
                    "$ref": "#/definitions/float"
                },
                {
                    "$ref": "#/definitions/integer"
                },
                {
                    "$ref": "#/definitions/string"
                },
                {
                    "$ref": "#/definitions/mgefCode"
                },
                {
                    "$ref": "#/definitions/bytes"
                },
                {
                    "$ref": "#/definitions/empty"
                },
                {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/id"
                        },
                        "name": {
                            "$ref": "#/definitions/name"
                        }
                    }
                }
            ]
        },
        "array": {
            "title": "Array",
            "type": "object",
            "required": [
                "type",
                "element"
            ],
            "additionalProperties": false,
            "properties": {
                "name": {
                    "$ref": "#/definitions/name"
                },
                "type": {
                    "const": "array"
                },
                "counter": {
                    "$ref": "#/definitions/counter"
                },
                "sorted": {
                    "$ref": "#/definitions/sorted"
                },
                "size": {
                    "$ref": "#/definitions/size"
                },
                "count": {
                    "type": "integer",
                    "description": "Fixed array element count.",
                    "minimum": 0
                },
                "prefix": {
                    "$ref": "#/definitions/prefix"
                },
                "element": {
                    "$ref": "#/definitions/field"
                },
                "afterSet": {
                    "$ref": "#/definitions/callback"
                }
            }
        },
        "union": {
            "title": "Union Field",
            "type": "object",
            "required": [
                "type",
                "decider",
                "elements"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "union"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "decider": {
                    "$ref": "#/definitions/callback",
                    "description": "Invoked to determine which field to use."
                },
                "afterSet": {
                    "$ref": "#/definitions/callback"
                },
                "elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/field"
                    }
                }
            }
        },
        "recursive": {
            "title": "Recursive",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "recursive"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "levelsUp": {
                    "type": "integer"
                }
            }
        },
        "formId": {
            "title": "Form ID",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "formId"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "signatures": {
                    "oneOf": [
                        {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/signature"
                            }
                        },
                        {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "$ref": "#/definitions/id"
                                }
                            }
                        }
                    ]
                },
                "defaultData": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Default data to use when initializing the field."
                },
                "persistent": {
                    "description": "Indicates the form ID should only reference records flagged as persistent.",
                    "const": true
                },
                "validateFlstRefs": {
                    "type": "boolean",
                    "description": "Indicates references to FLST records should verify the FLST contain valid references."
                },
                "overlayCallback": {
                    "$ref": "#/definitions/callback"
                }
            }
        },
        "float": {
            "title": "Float",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "float"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "scale": {
                    "type": "number",
                    "description": "If provided, the floating point value is multiplied by the scale before it is presented to the user."
                },
                "format": {
                    "$ref": "#/definitions/format"
                }
            }
        },
        "format": {
            "title": "Integer Format",
            "additionalProperties": false,
            "oneOf": [
                {
                    "title": "Reference",
                    "description": "A reference to a flags or enum esp.json definition.",
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/id"
                        }
                    }
                },
                {
                    "$ref": "#/definitions/divide"
                },
                {
                    "$ref": "#/definitions/flags"
                },
                {
                    "$ref": "#/definitions/enum"
                },
                {
                    "title": "Custom Format",
                    "type": "object",
                    "required": [
                        "type"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "type": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "divide": {
            "title": "Divide",
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "const": "divide"
                },
                "value": {
                    "type": "integer",
                    "description": "Number to divide by.",
                    "minimum": 1
                }
            }
        },
        "enum": {
            "title": "Enum",
            "type": "object",
            "required": [
                "type",
                "options"
            ],
            "properties": {
                "type": {
                    "const": "enum"
                },
                "unknownOption": {
                    "type": "string",
                    "description": "Value to use when there isn't an enumeration option for the data."
                },
                "options": {
                    "type": "object",
                    "description": "Associates positive integer keys to option labels.",
                    "patternProperties": {
                        "^(0|-?[1-9][0-9]*)$": {
                            "type": "string"
                        },
                        "^.{4}$": {
                            "type": "string",
                            "description": "A signature string."
                        }
                    },
                    "additionalProperties": false
                }
            }
        },
        "integer": {
            "title": "Integer",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "oneOf": [
                        {
                            "const": "int0",
                            "description": "0-bit integer"
                        },
                        {
                            "const": "int8",
                            "description": "8-bit signed integer"
                        },
                        {
                            "const": "int16",
                            "description": "16-bit signed integer"
                        },
                        {
                            "const": "int32",
                            "description": "32-bit signed integer"
                        },
                        {
                            "const": "uint8",
                            "description": "8-bit unsigned integer"
                        },
                        {
                            "const": "uint16",
                            "description": "16-bit unsigned integer"
                        },
                        {
                            "const": "uint32",
                            "description": "32-bit unsigned integer"
                        }
                    ]
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "format": {
                    "$ref": "#/definitions/format"
                },
                "defaultData": {
                    "type": "integer",
                    "description": "Default data to use when initializing an element."
                },
                "defaultValue": {
                    "type": "string",
                    "description": "Default value to use when initializing an element. This value gets parsed by the formatter."
                },
                "afterSet": {
                    "$ref": "#/definitions/callback"
                },
                "linksToCallback": {
                    "$ref": "#/definitions/callback"
                }
            }
        },
        "string": {
            "title": "String",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "string"
                },
                "size": {
                    "$ref": "#/definitions/size"
                },
                "prefix": {
                    "$ref": "#/definitions/prefix"
                },
                "localized": {
                    "type": "boolean",
                    "description": "Indicates a string has been localized using game localization files."
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "transform": {
                    "description": "Transform method to use.",
                    "enum": [
                        "keepcase",
                        "lowercase",
                        "script"
                    ]
                },
                "encoding": {
                    "type": "string",
                    "description": "Custom encoding to use."
                },
                "afterSet": {
                    "$ref": "#/definitions/callback"
                }
            }
        },
        "mgefCode": {
            "title": "MGEF Code",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "mgefCode"
                },
                "size": {
                    "$ref": "#/definitions/size"
                },
                "name": {
                    "$ref": "#/definitions/name"
                }
            }
        },
        "bytes": {
            "title": "Bytes",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "bytes"
                },
                "size": {
                    "$ref": "#/definitions/size"
                },
                "prefix": {
                    "$ref": "#/definitions/prefix"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "defaultValue": {
                    "type": "string",
                    "description": "Default value to use when initializing an element. This value should be parsed as a sequence of hexadecimal bytes.",
                    "examples": [
                        "3C A0 E9 A5"
                    ]
                }
            }
        },
        "empty": {
            "title": "Empty",
            "type": "object",
            "required": [
                "type"
            ],
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "empty"
                },
                "name": {
                    "$ref": "#/definitions/name"
                }
            }
        },
        "memberOrField": {
            "title": "Member or Field",
            "description": "Either a member or field.",
            "oneOf": [
                {
                    "$ref": "#/definitions/memberStruct"
                },
                {
                    "$ref": "#/definitions/memberArray"
                },
                {
                    "$ref": "#/definitions/memberUnion"
                },
                {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "signature": {
                            "$ref": "#/definitions/signature"
                        },
                        "conflictType": {
                            "$ref": "#/definitions/conflictType"
                        },
                        "required": {
                            "$ref": "#/definitions/required"
                        },
                        "defFlags": {
                            "$ref": "#/definitions/defFlags"
                        }
                    },
                    "oneOf": [
                        {
                            "$ref": "#/definitions/struct"
                        },
                        {
                            "$ref": "#/definitions/array"
                        },
                        {
                            "$ref": "#/definitions/union"
                        },
                        {
                            "$ref": "#/definitions/recursive"
                        },
                        {
                            "$ref": "#/definitions/formId"
                        },
                        {
                            "$ref": "#/definitions/float"
                        },
                        {
                            "$ref": "#/definitions/integer"
                        },
                        {
                            "$ref": "#/definitions/string"
                        },
                        {
                            "$ref": "#/definitions/mgefCode"
                        },
                        {
                            "$ref": "#/definitions/bytes"
                        },
                        {
                            "$ref": "#/definitions/empty"
                        }
                    ]
                }
            ]
        },
        "ctdaFunctions": {
            "title": "CTDA Functions",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "ctdaFunctions"
                },
                "ctdaFunctions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "type": {
                                "const": "ctdaFunction"
                            },
                            "index": {
                                "type": "integer",
                                "minimum": 0
                            },
                            "name": {
                                "type": "string"
                            },
                            "paramType1": {
                                "type": "string"
                            },
                            "paramType2": {
                                "type": "string"
                            },
                            "paramType3": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "pluginFile": {
            "title": "Plugin File",
            "description": "Plugin file definition.",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "const": "pluginFile"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "oneOf": [
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "id": {
                                        "$ref": "#/definitions/id"
                                    }
                                }
                            },
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "type",
                                    "signature"
                                ],
                                "properties": {
                                    "type": {
                                        "const": "group"
                                    },
                                    "signature": {
                                        "$ref": "#/definitions/signature"
                                    },
                                    "children": {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "$ref": "#/definitions/group"
                                                },
                                                {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "id"
                                                    ],
                                                    "properties": {
                                                        "id": {
                                                            "$ref": "#/definitions/id"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    }
}